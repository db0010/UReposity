（1）文字含义：多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定
（2）例子：Map map=new HashMap<String,Integer>();改语句实例化了一个指向HashMap(子类)的Map(父类)类型的引用，Map是一个接口，HashMap是一个类，因为map是一个Map类型的引用,对于HashMap中的方法是不能使用的；这样用实例化接口的引用而不是实例化具体类的对象，好处在于可扩展性强，map对象在后面还可以接受其他Map子类的对象（暂时我还不知道new的是HashMap等的对象，但是不能用HashMap的方法这些，那new来啥用？）
（3）等号前面和后面的两个类（或者接口）需具有继承关系，在JVM编译器的编译的时候验证的是Map（前面类）的方法，运行的时候运行的是HashMap类（后面的类）的方法，但是这里用都用不了HashMap的方法，不知道怎么回事，其他人的例子都是自己举的，都是两个具有继承关系的普通类就可以运行时使用new后面的类的方法（例子），不是这些数据结构类，还需要多了解；
（4)接口不能实例化，只能实力化接口的实现类